name: Build and deploy

on:
  pull_request:
    branches:
      - '**'
  push:
    paths-ignore:
      - '*.md'
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build_and_deploy_processor:
    runs-on: ubuntu-latest
    steps:
      - name: GIT | Checkout
        uses: actions/checkout@v2

      - name: GIT | Get branch info & current commit sha.
        id: get_branch
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: DOCKER | Login to Public Amazon ECR
        id: login-public-ecr
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1

      - name: DOCKER | Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build and push latest docker image
        id: build-image
        env:
          RELEASE_IMAGE: public.ecr.aws/p6e8q1z1/squid-processor:${{ steps.get_branch.outputs.sha_short }}
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile
          push: false
          tags: ${{ env.RELEASE_IMAGE }}
          target: processor

  build_and_deploy_api:
    runs-on: ubuntu-latest
    steps:
      - name: GIT | Checkout
        uses: actions/checkout@v2

      - name: GIT | Get branch info & current commit sha.
        id: get_branch
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: DOCKER | Login to Public Amazon ECR
        id: login-public-ecr
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1

      - name: DOCKER | Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build and push latest docker image
        id: build-image
        env:
          RELEASE_IMAGE: public.ecr.aws/p6e8q1z1/squid-api:${{ steps.get_branch.outputs.sha_short }}
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile
          push: false
          tags: ${{ env.RELEASE_IMAGE }}
          target: query-node
