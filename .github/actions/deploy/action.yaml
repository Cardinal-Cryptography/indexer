name: Deploy docker image to devnet

inputs:
  registry:
    description: Registry name, either squid-processor or squid-api
    required: true
  image_tag:
    description: Tag of the docker image to be deployed
    required: true
  featurenet_addresses_checksum: 
    description: Checksum of addresses.json file from featurenet
    required: true
  featurenet_commit_sha:
    description: SHA of commit from featurenet that addreses were built from
    required: true
  aws_devnet_access_key_id:
    required: true
  aws_devnet_secret_access_key:
    required: true
  ci_s3bucket_name:
    required: true
  github_token:
    required: true

runs:
  using: composite
  steps:
    - name: Check if registry input is valid
      if: ${{ inputs.registry != 'squid-processor' && inputs.registry != 'squid-api' }}
      shell: bash
      run: |
        echo "Invalid registry input"
        exit 1

    - name: GIT | Get branch info & current commit sha.
      id: get_branch
      shell: bash
      run: |
        echo "branch=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: GIT | Checkout aleph-apps repo
      uses: actions/checkout@master
      with:
        repository: Cardinal-Cryptography/aleph-apps
        token: ${{ inputs.github_token }}
        path: "aleph-apps"
        ref: A0-1459-indexer
    
    - name: KUSTOMIZE | Init kustomize
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: '3.8.6'

    - name: KUSTOMIZE | Update archive database
      if: ${{ inputs.registry == 'squid-processor' }}
      shell: bash
      run: |
        cd aleph-apps/indexer/archive/overlays/devnet/eu-central-1
        CADDRSUM=$(grep -n "name: CONTRACTS_ADDRESSES_CHECKSUM" kustomization.yaml | cut -d: -f1);
        CADDRSUM=$((CADDRSUM+1));
        sed -i "$CADDRSUM""s/value:.*/value: '${{ inputs.featurenet_addresses_checksum }}'/" kustomization.yaml
        CCOMMSHA=$(grep -n "name: CONTRACTS_COMMIT_SHA" kustomization.yaml | cut -d: -f1);
        CCOMMSHA=$((CCOMMSHA+1));
        sed -i "$CCOMMSHA""s/value:.*/value: '${{ inputs.featurenet_commit_sha }}'/" kustomization.yaml

    - name: KUSTOMIZE | Update squid database
      if: ${{ inputs.registry == 'squid-processor' }}
      shell: bash
      run: |
        cd aleph-apps/indexer/squid/overlays/devnet/eu-central-1
        CADDRSUM=$(grep -n "name: CONTRACTS_ADDRESSES_CHECKSUM" kustomization.yaml | cut -d: -f1);
        CADDRSUM=$((CADDRSUM+1));
        sed -i "$CADDRSUM""s/value:.*/value: '${{ inputs.featurenet_addresses_checksum }}'/" kustomization.yaml
        CCOMMSHA=$(grep -n "name: CONTRACTS_COMMIT_SHA" kustomization.yaml | cut -d: -f1);
        CCOMMSHA=$((CCOMMSHA+1));
        sed -i "$CCOMMSHA""s/value:.*/value: '${{ inputs.featurenet_commit_sha }}'/" kustomization.yaml

    - name: KUSTOMIZE | Update docker image tag for squid
      shell: bash
      env:
        DEPLOY_IMAGE: public.ecr.aws/p6e8q1z1/${{ inputs.registry }}:${{ inputs.image_tag }}
      run: |
        cd aleph-apps/indexer/squid/overlays/devnet/eu-central-1
        kustomize edit set image "${{ inputs.registry }}-image-placeholder=${{ env.DEPLOY_IMAGE }}"

    - name: GIT | Commit changes to aleph-apps repository
      uses: EndBug/add-and-commit@v5.1.0
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        author_name: AlephZero Automation
        author_email: alephzero@10clouds.com
        message: 'Updating Indexer ${{ inputs.registry }} docker image tag: ${{ inputs.image_tag }}'
        add: '*.yaml'
        cwd: 'aleph-apps'
        branch: A0-1459-indexer

    - name: AWS | Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws_devnet_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_devnet_secret_access_key }}
        aws-region: eu-central-1

    - name: KUBECTL | Setup kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.23.6'

    - name: KUBECTL | Destroy archive and squid apps
      if: ${{ inputs.registry == 'squid-processor' }}
      shell: bash
      run: |
        aws eks --region eu-central-1 update-kubeconfig --name alephzero-devnet-eu-central-1-eks
        kubectl delete -n indexer-squid --ignore-not-found=true deploy squid-api
        kubectl delete -n indexer-squid --ignore-not-found=true deploy squid-processor
        kubectl delete -n indexer-archive --ignore-not-found=true deploy archive-gateway
        kubectl delete -n indexer-archive --ignore-not-found=true deploy archive-ingest
